name: Build site php 8.2

on:
  workflow_dispatch:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Setup PHP with composer v2
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        tools: composer:v2

    - name: Get Composer Cache Directory.
      id: composer-cache
      run: |
        echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      shell: bash

    - name: Cache composer packages.
      uses: actions/cache@v3
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: Cache node modules.
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-npm-${{ hashFiles('**/package.json') }}
        restore-keys: |
          ${{ runner.os }}-npm-

    - name: Update composer dependencies
      run: composer update --prefer-dist --no-progress --no-suggest
      env: 
        COMPOSER_IGNORE_PLATFORM_REQ: php

    - name: Inject access token in .npmrc.
      run: | 
        echo "@helsingborg-stad:registry=https://npm.pkg.github.com/helsingborg-stad" >> ~/.npmrc
        echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> ~/.npmrc

    - name: Get ACF
      run: |
        wget "${{ secrets.ACF_URL }}" -O acf.zip
        unzip acf.zip -d wp-content/plugins/
        rm acf.zip

    - name: Execute buildscripts in themes and plugins folders
      run: php ./build.php --cleanup
      env: 
        COMPOSER_IGNORE_PLATFORM_REQ: php

    - name: Cleanup .npmrc
      run: rm ~/.npmrc

    - name: rsync deployment to correct web server user.
      uses: burnett01/rsync-deployments@4.1
      with:
        switches: -avzrog --rsync-path="sudo rsync" --delete --chown=nobody:nogroup --chmod=g+rw --exclude config --exclude wp-content/uploads --exclude wp-content/plugins/gravityforms --exclude wp-content/plugins/wp-schema-pro --exclude track-assets --exclude wp-content/plugins/volontar-wordpress --exclude wp-content/languages
        path: .
        remote_path: ${{ secrets.DEPLOY_REMOTE_PATH_MODUL_TEST_HELSINGBORG_IO_8_2 }}
        remote_host: ${{ secrets.DEPLOY_REMOTE_HOST_MODUL_TEST_HELSINGBORG_IO_8_2 }}
        remote_user: ${{ secrets.DEPLOY_AWS_REMOTE_USER_MODUL_TEST_HELSINGBORG_IO_8_2}}
        remote_key: ${{ secrets.DEPLOY_KEY_MODUL_TEST_HELSINGBORG_IO_8_2 }}

    - name: Clear varnish and redis object cache.
      uses: appleboy/ssh-action@master
      with:
        script: |
          cd ${{ secrets.DEPLOY_REMOTE_PATH_MODUL_TEST_HELSINGBORG_IO_8_2 }}
          wp cache flush --allow-root
          sudo rm ${{ secrets.DEPLOY_REMOTE_PATH_MODUL_TEST_HELSINGBORG_IO_8_2 }}/wp-content/uploads/cache/blade-cache/** || true
        host: ${{ secrets.DEPLOY_REMOTE_HOST_MODUL_TEST_HELSINGBORG_IO_8_2 }}
        username: ${{ secrets.DEPLOY_AWS_REMOTE_USER_MODUL_TEST_HELSINGBORG_IO_8_2 }}
        key: ${{ secrets.DEPLOY_KEY_MODUL_TEST_HELSINGBORG_IO_8_2 }}

  zipped-plugins:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: helsingborg-stad/wordpress-plugin-unzipper@main
      with:
        deploy-host: ${{ secrets.DEPLOY_REMOTE_HOST_MODUL_TEST_HELSINGBORG_IO_8_2 }}
        deploy-host-path: ${{ secrets.DEPLOY_REMOTE_PATH_MODUL_TEST_HELSINGBORG_IO_8_2 }}
        deploy-host-user: ${{ secrets.DEPLOY_AWS_REMOTE_USER_MODUL_TEST_HELSINGBORG_IO_8_2 }}
        deploy-host-user-key: ${{ secrets.DEPLOY_KEY_MODUL_TEST_HELSINGBORG_IO_8_2 }}
        deploy-host-web-server-user: "nobody"
        github-token: ${{ secrets.HBG_GH_TOKEN }}
        plugin-repo: ${{ secrets.PAID_PLUGINS_REPO }}

